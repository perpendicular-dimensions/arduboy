#pragma once

#include "utility.h"
#include <stdint.h>

/* Types of ground. */
enum class Grounds : uint8_t { empty, ground, river, bridge };

/* Types of objects that walk around the level. */
enum class Walkers : uint8_t { man, bird };

/* Type of building that can be constructed by the player. */
class Building {
public:
  enum class IDs : uint8_t {
    empty,
    weed,
    cactus,
    tree,
    house,
    mine,
    church,
    sheriff,
    bank,
    water,
    saloon,
    mill,
    farm,
    count
  };

  const IDs id;         /* The building's ID. */
  const uint8_t jobs;   /* How many jobs the building offer. */
  const uint8_t cost;   /* How much does it cost to construct the building. */
  const uint8_t width;  /* Width in tiles (8px). */
  const uint8_t height; /* Height in tiles (8px). */
  const uint8_t maintenance; /* Cost to maintain the building in $/sec. */
  const uint8_t profit;  /* Money generated by the building at full capacity. */
  const uint8_t *bitmap; /* Pointer to the bitmap. */

  /* Static array of building's data initialized in PROGMEM. */
  static const Building buildings[(uint8_t)Building::IDs::count];

  /* Copies the building's name from PROGMEM to the destination string. */
  void strncpyName(char dest[8]) const;

public:
  static const Building at(const Building::IDs id) {
    return Building::buildings[(uint8_t)id];
  }
  static const Building at(const uint8_t id) { return Building::buildings[id]; }
  static const uint8_t count() { return (uint8_t)Building::IDs::count; }

private:
  /* It's not possible to construct a building programmatically. */
  Building(const IDs id, const uint8_t jobs, const uint8_t cost,
           const uint8_t width, const uint8_t height, const uint8_t maintenance,
           const uint8_t profit, const uint8_t *bitmap);
};
